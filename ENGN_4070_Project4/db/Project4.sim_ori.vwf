/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000000.0;
	SIMULATION_TIME = 1000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("RST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SIM_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sec[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Sec[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Sec[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Sec[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTEN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TENSEC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TENSEC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENSEC";
}

SIGNAL("TENSEC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENSEC";
}

SIGNAL("TENSEC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENSEC";
}

SIGNAL("TENSEC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENSEC";
}

SIGNAL("OUT2EN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MIN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MIN";
}

SIGNAL("MIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MIN";
}

SIGNAL("MIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MIN";
}

SIGNAL("MIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MIN";
}

SIGNAL("TENMIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TENMIN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENMIN";
}

SIGNAL("TENMIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENMIN";
}

SIGNAL("TENMIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENMIN";
}

SIGNAL("TENMIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TENMIN";
}

SIGNAL("OUT3EN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT4EN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("Sec")
{
	MEMBERS = "Sec[0]", "Sec[1]", "Sec[2]", "Sec[3]";
}

TRANSITION_LIST("RST")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000000.0;
	}
}

TRANSITION_LIST("SIM_CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("Sec[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500019.3;
		NODE
		{
			REPEAT = 499;
			LEVEL 1 FOR 1000000.0;
			LEVEL 0 FOR 1000000.0;
		}
		LEVEL 1 FOR 1000000.0;
		LEVEL 0 FOR 499980.7;
	}
}

TRANSITION_LIST("Sec[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500016.1;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 2000000.0;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 4000000.0;
		}
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2499983.9;
	}
}

TRANSITION_LIST("Sec[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3500018.8;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 4000000.0;
			LEVEL 0 FOR 6000000.0;
		}
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2499981.2;
	}
}

TRANSITION_LIST("Sec[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7500016.1;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 8000000.0;
		}
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 499983.9;
	}
}

TRANSITION_LIST("OUTEN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8500016.5;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 1000000.0;
			LEVEL 0 FOR 9000000.0;
		}
		LEVEL 1 FOR 1000000.0;
		LEVEL 0 FOR 499983.5;
	}
}

TRANSITION_LIST("TENSEC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69500018.8;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 80000000.0;
			LEVEL 0 FOR 70000000.0;
		}
		LEVEL 1 FOR 30499981.2;
	}
}

TRANSITION_LIST("TENSEC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39500016.1;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30000000.0;
			LEVEL 0 FOR 40000000.0;
			LEVEL 1 FOR 40000000.0;
			LEVEL 0 FOR 40000000.0;
		}
		LEVEL 1 FOR 30000000.0;
		LEVEL 0 FOR 30499983.9;
	}
}

TRANSITION_LIST("TENSEC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19500016.1;
		LEVEL 1 FOR 20000000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20000000.0;
			LEVEL 1 FOR 10000000.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20000000.0;
				LEVEL 1 FOR 20000000.0;
			}
		}
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 10499983.9;
	}
}

TRANSITION_LIST("TENSEC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9500016.3;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10000000.0;
			LEVEL 0 FOR 10000000.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 20000000.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 10000000.0;
				LEVEL 1 FOR 10000000.0;
			}
			LEVEL 0 FOR 10000000.0;
		}
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 499983.7;
	}
}

TRANSITION_LIST("OUT2EN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49500016.1;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10000000.0;
			LEVEL 0 FOR 140000000.0;
		}
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 40499983.9;
	}
}

TRANSITION_LIST("MIN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("MIN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 509500019.5;
		LEVEL 1 FOR 490499980.5;
	}
}

TRANSITION_LIST("MIN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 209500019.6;
		LEVEL 1 FOR 300000000.0;
		LEVEL 0 FOR 300000000.0;
		LEVEL 1 FOR 190499980.4;
	}
}

TRANSITION_LIST("MIN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59500016.3;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 150000000.0;
			LEVEL 0 FOR 150000000.0;
		}
		LEVEL 1 FOR 40499983.7;
	}
}

TRANSITION_LIST("TENMIN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("TENMIN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("TENMIN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("TENMIN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("OUT3EN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("OUT4EN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "SIM_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sec";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "Sec[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Sec[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Sec[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Sec[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "TENSEC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "TENSEC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "TENSEC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "TENSEC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "TENSEC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "MIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "MIN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "TENMIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "TENMIN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "TENMIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "TENMIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "TENMIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "OUTEN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUT2EN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUT3EN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUT4EN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 31225;
	MASTER = TRUE;
}
;
