--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="FLEX10K" IGNORE_CASCADE_BUFFERS="OFF" LPM_PIPELINE=1 LPM_SIZE=5 LPM_WIDTH=1 LPM_WIDTHS=3 clock data result sel
--VERSION_BEGIN 9.0SP2 cbx_lpm_mux 2009:03:31:01:01:28:SJ cbx_mgl 2009:02:26:16:06:21:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 6 
SUBDESIGN mux_e9e
( 
	clock	:	input;
	data[4..0]	:	input;
	result[0..0]	:	output;
	sel[2..0]	:	input;
) 
VARIABLE 
	dffe1a[2..0] : dffe;
	dffe2 : dffe;
	dffe3 : dffe;
	result_node[0..0]	: WIRE;
	sel_ffs_wire[2..0]	: WIRE;
	sel_node[2..0]	: WIRE;
	w_data10w[7..0]	: WIRE;
	w_data32w[3..0]	: WIRE;
	w_data33w[3..0]	: WIRE;
	w_sel34w[1..0]	: WIRE;

BEGIN 
	dffe1a[].clk = clock;
	dffe1a[].d = sel[2..0];
	dffe2.clk = clock;
	dffe2.d = (((w_data32w[1..1] & w_sel34w[0..0]) & (! (((w_data32w[0..0] & (! w_sel34w[1..1])) & (! w_sel34w[0..0])) # (w_sel34w[1..1] & (w_sel34w[0..0] # w_data32w[2..2]))))) # ((((w_data32w[0..0] & (! w_sel34w[1..1])) & (! w_sel34w[0..0])) # (w_sel34w[1..1] & (w_sel34w[0..0] # w_data32w[2..2]))) & (w_data32w[3..3] # (! w_sel34w[0..0]))));
	dffe3.clk = clock;
	dffe3.d = (((w_data33w[1..1] & w_sel34w[0..0]) & (! (((w_data33w[0..0] & (! w_sel34w[1..1])) & (! w_sel34w[0..0])) # (w_sel34w[1..1] & (w_sel34w[0..0] # w_data33w[2..2]))))) # ((((w_data33w[0..0] & (! w_sel34w[1..1])) & (! w_sel34w[0..0])) # (w_sel34w[1..1] & (w_sel34w[0..0] # w_data33w[2..2]))) & (w_data33w[3..3] # (! w_sel34w[0..0]))));
	result[] = result_node[];
	result_node[] = ( ((sel_node[2..2] & dffe3.q) # ((! sel_node[2..2]) & dffe2.q)));
	sel_ffs_wire[] = ( dffe1a[].q);
	sel_node[] = ( sel_ffs_wire[2..2], sel[1..0]);
	w_data10w[] = ( B"000", data[4..0]);
	w_data32w[3..0] = w_data10w[3..0];
	w_data33w[3..0] = w_data10w[7..4];
	w_sel34w[1..0] = sel_node[1..0];
END;
--VALID FILE
