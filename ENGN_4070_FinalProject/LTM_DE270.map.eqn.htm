<html>
<head>
<TITLE>HTML file for equations </TITLE>
</head>
<body>
<p>
-- Copyright (C) 1991-2009 Altera Corporation<br>
-- Your use of Altera Corporation's design tools, logic functions <br>
-- and other software and tools, and its AMPP partner logic <br>
-- functions, and any output files from any of the foregoing <br>
-- (including device programming or simulation files), and any <br>
-- associated documentation or information are expressly subject <br>
-- to the terms and conditions of the Altera Program License <br>
-- Subscription Agreement, Altera MegaCore Function License <br>
-- Agreement, or other applicable license agreement, including, <br>
-- without limitation, that your use is for the sole purpose of <br>
-- programming logic devices manufactured by Altera and sold by <br>
-- Altera or its authorized distributors.  Please refer to the <br>
-- applicable agreement for further details.<br>
<P> --LTM_GRESET_LZ is LTM_GRESET_LZ
<P><A NAME="LTM_GRESET_LZ">LTM_GRESET_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX1_DP_LZ is HEX1_DP_LZ
<P><A NAME="HEX1_DP_LZ">HEX1_DP_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX2_DP_LZ is HEX2_DP_LZ
<P><A NAME="HEX2_DP_LZ">HEX2_DP_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX3_DP_LZ is HEX3_DP_LZ
<P><A NAME="HEX3_DP_LZ">HEX3_DP_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX4_DP_LZ is HEX4_DP_LZ
<P><A NAME="HEX4_DP_LZ">HEX4_DP_LZ</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_DP_LZ is HEX5_DP_LZ
<P><A NAME="HEX5_DP_LZ">HEX5_DP_LZ</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX6_DP_LZ is HEX6_DP_LZ
<P><A NAME="HEX6_DP_LZ">HEX6_DP_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX7_DP_LZ is HEX7_DP_LZ
<P><A NAME="HEX7_DP_LZ">HEX7_DP_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX8_DP_LZ is HEX8_DP_LZ
<P><A NAME="HEX8_DP_LZ">HEX8_DP_LZ</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --LTM_ADC_DIN_Z is LTM_ADC_DIN_Z
<P><A NAME="LTM_ADC_DIN_Z">LTM_ADC_DIN_Z</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --LTM_LCD_DCLK_Z is LTM_LCD_DCLK_Z
<P><A NAME="LTM_LCD_DCLK_Z">LTM_LCD_DCLK_Z</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --LTM_LCD_SCEN_Z is LTM_LCD_SCEN_Z
<P><A NAME="LTM_LCD_SCEN_Z">LTM_LCD_SCEN_Z</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --READY_IRQ_LZ is READY_IRQ_LZ
<P><A NAME="READY_IRQ_LZ">READY_IRQ_LZ</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX1_LZ[7] is HEX1_LZ[7]
<P><A NAME="HEX1_LZ[7]">HEX1_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX1_LZ[6] is HEX1_LZ[6]
<P><A NAME="HEX1_LZ[6]">HEX1_LZ[6]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX1_LZ[5] is HEX1_LZ[5]
<P><A NAME="HEX1_LZ[5]">HEX1_LZ[5]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX1_LZ[4] is HEX1_LZ[4]
<P><A NAME="HEX1_LZ[4]">HEX1_LZ[4]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX1_LZ[3] is HEX1_LZ[3]
<P><A NAME="HEX1_LZ[3]">HEX1_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX1_LZ[2] is HEX1_LZ[2]
<P><A NAME="HEX1_LZ[2]">HEX1_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX1_LZ[1] is HEX1_LZ[1]
<P><A NAME="HEX1_LZ[1]">HEX1_LZ[1]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX2_LZ[7] is HEX2_LZ[7]
<P><A NAME="HEX2_LZ[7]">HEX2_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX2_LZ[6] is HEX2_LZ[6]
<P><A NAME="HEX2_LZ[6]">HEX2_LZ[6]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX2_LZ[5] is HEX2_LZ[5]
<P><A NAME="HEX2_LZ[5]">HEX2_LZ[5]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX2_LZ[4] is HEX2_LZ[4]
<P><A NAME="HEX2_LZ[4]">HEX2_LZ[4]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX2_LZ[3] is HEX2_LZ[3]
<P><A NAME="HEX2_LZ[3]">HEX2_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX2_LZ[2] is HEX2_LZ[2]
<P><A NAME="HEX2_LZ[2]">HEX2_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX2_LZ[1] is HEX2_LZ[1]
<P><A NAME="HEX2_LZ[1]">HEX2_LZ[1]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX3_LZ[7] is HEX3_LZ[7]
<P><A NAME="HEX3_LZ[7]">HEX3_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX3_LZ[6] is HEX3_LZ[6]
<P><A NAME="HEX3_LZ[6]">HEX3_LZ[6]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX3_LZ[5] is HEX3_LZ[5]
<P><A NAME="HEX3_LZ[5]">HEX3_LZ[5]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX3_LZ[4] is HEX3_LZ[4]
<P><A NAME="HEX3_LZ[4]">HEX3_LZ[4]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX3_LZ[3] is HEX3_LZ[3]
<P><A NAME="HEX3_LZ[3]">HEX3_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX3_LZ[2] is HEX3_LZ[2]
<P><A NAME="HEX3_LZ[2]">HEX3_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX3_LZ[1] is HEX3_LZ[1]
<P><A NAME="HEX3_LZ[1]">HEX3_LZ[1]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[7] is HEX4_LZ[7]
<P><A NAME="HEX4_LZ[7]">HEX4_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[6] is HEX4_LZ[6]
<P><A NAME="HEX4_LZ[6]">HEX4_LZ[6]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[5] is HEX4_LZ[5]
<P><A NAME="HEX4_LZ[5]">HEX4_LZ[5]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[4] is HEX4_LZ[4]
<P><A NAME="HEX4_LZ[4]">HEX4_LZ[4]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[3] is HEX4_LZ[3]
<P><A NAME="HEX4_LZ[3]">HEX4_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[2] is HEX4_LZ[2]
<P><A NAME="HEX4_LZ[2]">HEX4_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX4_LZ[1] is HEX4_LZ[1]
<P><A NAME="HEX4_LZ[1]">HEX4_LZ[1]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX5_LZ[7] is HEX5_LZ[7]
<P><A NAME="HEX5_LZ[7]">HEX5_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_LZ[6] is HEX5_LZ[6]
<P><A NAME="HEX5_LZ[6]">HEX5_LZ[6]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_LZ[5] is HEX5_LZ[5]
<P><A NAME="HEX5_LZ[5]">HEX5_LZ[5]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_LZ[4] is HEX5_LZ[4]
<P><A NAME="HEX5_LZ[4]">HEX5_LZ[4]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_LZ[3] is HEX5_LZ[3]
<P><A NAME="HEX5_LZ[3]">HEX5_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_LZ[2] is HEX5_LZ[2]
<P><A NAME="HEX5_LZ[2]">HEX5_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX5_LZ[1] is HEX5_LZ[1]
<P><A NAME="HEX5_LZ[1]">HEX5_LZ[1]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX6_LZ[7] is HEX6_LZ[7]
<P><A NAME="HEX6_LZ[7]">HEX6_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX6_LZ[6] is HEX6_LZ[6]
<P><A NAME="HEX6_LZ[6]">HEX6_LZ[6]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX6_LZ[5] is HEX6_LZ[5]
<P><A NAME="HEX6_LZ[5]">HEX6_LZ[5]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX6_LZ[4] is HEX6_LZ[4]
<P><A NAME="HEX6_LZ[4]">HEX6_LZ[4]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX6_LZ[3] is HEX6_LZ[3]
<P><A NAME="HEX6_LZ[3]">HEX6_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX6_LZ[2] is HEX6_LZ[2]
<P><A NAME="HEX6_LZ[2]">HEX6_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX6_LZ[1] is HEX6_LZ[1]
<P><A NAME="HEX6_LZ[1]">HEX6_LZ[1]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX7_LZ[7] is HEX7_LZ[7]
<P><A NAME="HEX7_LZ[7]">HEX7_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX7_LZ[6] is HEX7_LZ[6]
<P><A NAME="HEX7_LZ[6]">HEX7_LZ[6]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX7_LZ[5] is HEX7_LZ[5]
<P><A NAME="HEX7_LZ[5]">HEX7_LZ[5]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX7_LZ[4] is HEX7_LZ[4]
<P><A NAME="HEX7_LZ[4]">HEX7_LZ[4]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX7_LZ[3] is HEX7_LZ[3]
<P><A NAME="HEX7_LZ[3]">HEX7_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX7_LZ[2] is HEX7_LZ[2]
<P><A NAME="HEX7_LZ[2]">HEX7_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX7_LZ[1] is HEX7_LZ[1]
<P><A NAME="HEX7_LZ[1]">HEX7_LZ[1]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX8_LZ[7] is HEX8_LZ[7]
<P><A NAME="HEX8_LZ[7]">HEX8_LZ[7]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX8_LZ[6] is HEX8_LZ[6]
<P><A NAME="HEX8_LZ[6]">HEX8_LZ[6]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX8_LZ[5] is HEX8_LZ[5]
<P><A NAME="HEX8_LZ[5]">HEX8_LZ[5]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX8_LZ[4] is HEX8_LZ[4]
<P><A NAME="HEX8_LZ[4]">HEX8_LZ[4]</A> = OUTPUT(<A HREF="#A1L86">A1L86</A>);


<P> --HEX8_LZ[3] is HEX8_LZ[3]
<P><A NAME="HEX8_LZ[3]">HEX8_LZ[3]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX8_LZ[2] is HEX8_LZ[2]
<P><A NAME="HEX8_LZ[2]">HEX8_LZ[2]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --HEX8_LZ[1] is HEX8_LZ[1]
<P><A NAME="HEX8_LZ[1]">HEX8_LZ[1]</A> = OUTPUT(<A HREF="#A1L85">A1L85</A>);


<P> --LTM_ADC_IRQ_LY is LTM_ADC_IRQ_LY
<P><A NAME="LTM_ADC_IRQ_LY">LTM_ADC_IRQ_LY</A> = INPUT();


<P> --XTAL_50MHZ_Y1 is XTAL_50MHZ_Y1
<P><A NAME="XTAL_50MHZ_Y1">XTAL_50MHZ_Y1</A> = INPUT();


<P> --LTM_ADC_BUSY_Y is LTM_ADC_BUSY_Y
<P><A NAME="LTM_ADC_BUSY_Y">LTM_ADC_BUSY_Y</A> = INPUT();


<P> --LTM_ADC_DOUT_Y is LTM_ADC_DOUT_Y
<P><A NAME="LTM_ADC_DOUT_Y">LTM_ADC_DOUT_Y</A> = INPUT();


<P> --KEY0_LY is KEY0_LY
<P><A NAME="KEY0_LY">KEY0_LY</A> = INPUT();


<P> --KEY1_LY is KEY1_LY
<P><A NAME="KEY1_LY">KEY1_LY</A> = INPUT();


<P> --LTM_LCD_SDA_X is LTM_LCD_SDA_X
<P><A NAME="LTM_LCD_SDA_X">LTM_LCD_SDA_X</A> = BIDIR(<A HREF="#LTM_LCD_SDA_X">LTM_LCD_SDA_X</A>);


<P> --A1L86 is ~VCC
<P><A NAME="A1L86">A1L86</A> = VCC;


<P> --A1L85 is ~GND
<P><A NAME="A1L85">A1L85</A> = GND;


<P> --LTM_LCD_SDA_X is LTM_LCD_SDA_X
<P> --operation mode is bidir

<P><A NAME="LTM_LCD_SDA_X_tri_out">LTM_LCD_SDA_X_tri_out</A> = TRI(VCC, VCC);
<P><A NAME="LTM_LCD_SDA_X">LTM_LCD_SDA_X</A> = BIDIR(<A HREF="#LTM_LCD_SDA_X_tri_out">LTM_LCD_SDA_X_tri_out</A>);


</body></html>