--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="FLEX10K" IGNORE_CASCADE_BUFFERS="OFF" LPM_PIPELINE=0 LPM_SIZE=5 LPM_WIDTH=2 LPM_WIDTHS=3 data result sel
--VERSION_BEGIN 9.0SP2 cbx_lpm_mux 2009:03:31:01:01:28:SJ cbx_mgl 2009:02:26:16:06:21:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cascade (in)
RETURNS ( out);

--synthesis_resources = lut 8 
SUBDESIGN mux_2od
( 
	data[9..0]	:	input;
	result[1..0]	:	output;
	sel[2..0]	:	input;
) 
VARIABLE 
	csc1 : cascade;
	csc2 : cascade;
	muxlut_data0w[4..0]	: WIRE;
	muxlut_data1w[4..0]	: WIRE;
	muxlut_result0w	: WIRE;
	muxlut_result1w	: WIRE;
	muxlut_select0w[2..0]	: WIRE;
	muxlut_select1w[2..0]	: WIRE;
	result_node[1..0]	: WIRE;
	sel_ffs_wire[2..0]	: WIRE;
	sel_node[2..0]	: WIRE;
	w25w[3..0]	: WIRE;
	w27w[1..0]	: WIRE;
	w50w[0..0]	: WIRE;
	w73w[3..0]	: WIRE;
	w75w[1..0]	: WIRE;
	w98w[0..0]	: WIRE;
	w_mux_outputs23w[1..0]	: WIRE;
	w_mux_outputs71w[1..0]	: WIRE;

BEGIN 
	csc1.in = ((w27w[1..1] # (w27w[0..0] & w25w[1..1])) # ((! w27w[0..0]) & w25w[0..0]));
	csc2.in = ((w75w[1..1] # (w75w[0..0] & w73w[1..1])) # ((! w75w[0..0]) & w73w[0..0]));
	muxlut_data0w[] = ( data[8..8], data[6..6], data[4..4], data[2..2], data[0..0]);
	muxlut_data1w[] = ( data[9..9], data[7..7], data[5..5], data[3..3], data[1..1]);
	muxlut_result0w = ((w_mux_outputs23w[0..0] & (! w50w[0..0])) # (w_mux_outputs23w[1..1] & w50w[0..0]));
	muxlut_result1w = ((w_mux_outputs71w[0..0] & (! w98w[0..0])) # (w_mux_outputs71w[1..1] & w98w[0..0]));
	muxlut_select0w[] = sel_node[];
	muxlut_select1w[] = sel_node[];
	result[] = result_node[];
	result_node[] = ( muxlut_result1w, muxlut_result0w);
	sel_ffs_wire[] = ( sel[2..0]);
	sel_node[] = ( sel_ffs_wire[2..2], sel[1..0]);
	w25w[3..0] = muxlut_data0w[3..0];
	w27w[1..0] = muxlut_select0w[1..0];
	w50w[0..0] = muxlut_select0w[2..2];
	w73w[3..0] = muxlut_data1w[3..0];
	w75w[1..0] = muxlut_select1w[1..0];
	w98w[0..0] = muxlut_select1w[2..2];
	w_mux_outputs23w[] = ( muxlut_data0w[4..4], ((((! w27w[1..1]) # (w27w[0..0] & w25w[3..3])) # ((! w27w[0..0]) & w25w[2..2])) & csc1.out));
	w_mux_outputs71w[] = ( muxlut_data1w[4..4], ((((! w75w[1..1]) # (w75w[0..0] & w73w[3..3])) # ((! w75w[0..0]) & w73w[2..2])) & csc2.out));
END;
--VALID FILE
